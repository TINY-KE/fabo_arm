<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find rm_75_description)/urdf/rm_75_bottom.urdf.xacro'" /> 
<!-- xacro是ROS中的一个工具，用于解析和处理包含宏定义的XML文件。在这里，它使用
rm_75_bottom.urdf.xacro
rm_75_bottom_large_rotate_range.urdf.xacro   扩大了关节的旋转范围
文件生成URDF描述。 -->

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model rm_75 -param robot_description"/> 
<!-- respawn="false"表示如果节点意外终止，不会自动重启。 -->
<!-- 要加载的URDF文件（-urdf） -->
<!-- 在Gazebo中创建的机器人模型的名称（-model rm_75） -->


</launch>
