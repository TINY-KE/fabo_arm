<?xml version="1.0"?>
<robot name="sensor_kinect" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <!-- [1]  Microsoft Kinect / ASUS Xtion PRO Live for simulation -->
  <xacro:macro name="sim_3dsensor">
    <gazebo reference="camera_link">  
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <update_rate>30.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>
        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>/</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>30</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>/depth_to_rgb/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>camera_depth_optical_frame</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
       <material>Gazebo/Black</material>
    </gazebo>
  </xacro:macro>

  <!-- [2]  pose from camera to robot -->
  <xacro:property name="cam_px" value="0.004925" />    <!-- 4.925mm  -->
  <xacro:property name="cam_py" value="0.0"/>  
	<xacro:property name="cam_pz" value="0.02" />
	<xacro:property name="cam_or" value="0" />
	<xacro:property name="cam_op" value="0" />
	<!-- <xacro:property name="cam_oy" value="${-M_PI/2}" /> -->
  <!-- <xacro:property name="dis_py_between_rgb_and_depth" value="0.0"/> -->


  <!-- [3]  Parameterised in part by the values in turtlebot_properties.urdf.xacro -->
  <xacro:macro name="sensor_kinectdk" params="parent cam_oy dis_py_between_rgb_and_depth ">
    <!-- joint connected to robot -->
    
    <joint name="camera_link_joint" type="fixed">
      <origin xyz="${cam_px} ${cam_py} ${cam_pz}" rpy="${cam_or} ${cam_op} ${cam_oy}"/>
      <parent link="${parent}"/>
      <child link="camera_link"/>
    </joint> 
    
    <!-- camera body -->
    <link name="camera_link">
      <visual>
       <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.0994 0.1 0.04"/>  
        </geometry>
      </visual>
  	  <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  	    <geometry>
  	      <box size="0.0994 0.1 0.02"/>
  	    </geometry>
  	  </collision>
      <inertial>
        <mass value="1e-5" /> <!-- 0.564 -->
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                 iyy="0.000498940" iyz="0.0"
                 izz="0.003879257" />
      </inertial>
    </link>

    <joint name="head_joint" type="fixed">
      <origin xyz="0.0627 0 0" rpy="0 0 0"/>  <!-- 62.7mm -->
      <parent link="camera_link"/>
      <child link="head_link"/>
    </joint> 

    <link name="head_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.026 0.105 0.04"/>  
        </geometry>
      </visual>
      <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
        <geometry>
          <box size="0.026 0.105 0.04"/> 
        </geometry>
      </collision>
      <inertial>
        <mass value="1e-5" /> <!-- 0.564 -->
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0"
                  iyy="0.000498940" iyz="0.0"
                  izz="0.003879257" />
      </inertial>
    </link>
    <gazebo reference="head_link">
              <material>Gazebo/Red</material>
    </gazebo>




    <!-- camera image  -->
    <joint name="camera_rgb_joint" type="fixed">
      <origin xyz="0.080625 ${dis_py_between_rgb_and_depth/2} 0" rpy="0 0 0"/>  <!-- 80.625mm -->
      <parent link="camera_link"/>
      <child link="camera_rgb_frame" />
    </joint>

    <link name="camera_rgb_frame"/>

    <joint name="camera_rgb_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
      <parent link="camera_rgb_frame" />
      <child link="camera_rgb_optical_frame" />
    </joint>

    <link name="camera_rgb_optical_frame"/>

    <!-- The fixed joints & links below are usually published by static_transformers launched by the OpenNi launch 
         files. However, for Gazebo simulation we need them, so we add them here.
         (Hence, don't publish them additionally!) -->
	<joint name="camera_depth_joint" type="fixed">
	  <origin xyz="0 ${-dis_py_between_rgb_and_depth} 0" rpy="0 0 0" />
	  <parent link="camera_rgb_frame" />
	  <child link="camera_depth_frame" />
	</joint>
	<link name="camera_depth_frame"/>

	<joint name="camera_depth_optical_joint" type="fixed">
	  <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
	  <parent link="camera_depth_frame" />
	  <child link="camera_depth_optical_frame" />
	</joint>
	<link name="camera_depth_optical_frame"/>


	<!-- Kinect sensor for simulation -->
	<xacro:sim_3dsensor/>
  </xacro:macro>
</robot>
